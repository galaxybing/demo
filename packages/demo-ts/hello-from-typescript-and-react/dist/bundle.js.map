{"version":3,"sources":["webpack:///webpack/bootstrap 3ffe5215933b5c6b9ccc","webpack:///external \"React\"","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/Hello.tsx","webpack:///./webpack.config.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA,uB;;;;;;;;;;;;;;;;;ACAA,mCAA+B;AAC/B,sCAAsC;AAEtC,qCAA2C;AAE3C,QAAQ,CAAC,MAAM,CACX,oBAAC,aAAK,IAAC,QAAQ,EAAC,YAAY,EAAC,SAAS,EAAC,OAAO,GAAG,EACjD,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CACrC,CAAC;;;;;;;ACRF,0B;;;;;;;;;ACAA,mCAA+B;AAIlB,aAAK,GAAG,UAAC,KAAiB,IAAK;;IAAgB,KAAK,CAAC,QAAQ;;IAAO,KAAK,CAAC,SAAS;QAAO,EAA3D,CAA2D,CAAC;AACxG;;;;;;;;;;;GAWG;;;;;;;AChBH;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,aAAa,uDAAuD;;AAEpE;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3ffe5215933b5c6b9ccc","module.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 0\n// module chunks = 0","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { Hello } from \"./components/Hello\";\n\nReactDOM.render(\n    <Hello compiler=\"TypeScript\" framework=\"React\" />,\n    document.getElementById(\"example\")\n);\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","module.exports = ReactDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactDOM\"\n// module id = 3\n// module chunks = 0","import * as React from \"react\";\n\nexport interface HelloProps { compiler: string; framework: string; }\n\nexport const Hello = (props: HelloProps) => <h1>Hello from {props.compiler} and {props.framework}!</h1>;\n/*\n\n// Component components\n// 'HelloProps' describes the shape of props.\n// State is never set so we use the '{}' type.\n\nexport class Hello extends React.Component<HelloProps, {}> {\n    render() {\n        return <h1>Hello from {this.props.compiler} and {this.props.framework}!</h1>;\n    }\n}\n */\n\n\n// WEBPACK FOOTER //\n// ./src/components/Hello.tsx","module.exports = {\n    entry: \"./src/index.tsx\",\n    output: {\n        filename: \"bundle.js\",\n        path: __dirname + \"/dist\"\n    },\n\n    // Enable sourcemaps for debugging webpack's output.\n    devtool: \"source-map\",\n\n    resolve: {\n        // Add '.ts' and '.tsx' as resolvable extensions.\n        extensions: [\".ts\", \".tsx\", \".js\", \".json\"]\n    },\n\n    module: {\n        rules: [\n            // All files with a '.ts' or '.tsx' extension will be handled by 'awesome-typescript-loader'.\n            { test: /\\.tsx?$/, loader: \"awesome-typescript-loader\" },\n\n            // All output '.js' files will have any sourcemaps re-processed by 'source-map-loader'.\n            { enforce: \"pre\", test: /\\.js$/, loader: \"source-map-loader\" }\n        ]\n    },\n\n    // When importing a module whose path matches one of the following, just\n    // assume a corresponding global variable exists and use that instead.\n    // This is important because it allows us to avoid bundling all of our\n    // dependencies, which allows browsers to cache those libraries between builds.\n    externals: {\n        \"react\": \"React\",\n        \"react-dom\": \"ReactDOM\"\n    },\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./webpack.config.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}